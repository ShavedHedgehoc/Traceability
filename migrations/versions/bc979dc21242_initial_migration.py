"""Initial migration

Revision ID: bc979dc21242
Revises: 
Create Date: 2021-06-14 14:14:11.050221

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = 'bc979dc21242'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('barcode', sa.String(length=13), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_author_barcode'), 'author', ['barcode'], unique=False)
    op.create_index(op.f('ix_author_name'), 'author', ['name'], unique=True)
    op.create_table('barrel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_barrel_name'), 'barrel', ['name'], unique=True)
    op.create_table('batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=10), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('plant', sa.String(length=1), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batch_name'), 'batch', ['name'], unique=True)
    op.create_index(op.f('ix_batch_plant'), 'batch', ['plant'], unique=False)
    op.create_table('container',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_container_name'), 'container', ['name'], unique=True)
    op.create_table('doctype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('alias', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doctype_alias'), 'doctype', ['alias'], unique=False)
    op.create_index(op.f('ix_doctype_name'), 'doctype', ['name'], unique=True)
    op.create_table('manufacturer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manufacturer_name'), 'manufacturer', ['name'], unique=True)
    op.create_table('manufacturer_lot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_manufacturer_lot_name'), 'manufacturer_lot', ['name'], unique=True)
    op.create_table('product',
    sa.Column('id', sa.String(length=6), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('marking', sa.String(length=50), nullable=True),
    sa.Column('barcode', sa.String(length=13), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_barcode'), 'product', ['barcode'], unique=False)
    op.create_index(op.f('ix_product_marking'), 'product', ['marking'], unique=False)
    op.create_index(op.f('ix_product_name'), 'product', ['name'], unique=False)
    op.create_table('seller',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seller_name'), 'seller', ['name'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('xml_dataP',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('xml_data', sa.Text(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('empty_doc', sa.Boolean(), nullable=True),
    sa.Column('unsupported_doc', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.String(length=6), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batch_product_batch_id'), 'batch_product', ['batch_id'], unique=False)
    op.create_index(op.f('ix_batch_product_product_id'), 'batch_product', ['product_id'], unique=False)
    op.create_table('boil',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.String(length=6), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_boil_batch_id'), 'boil', ['batch_id'], unique=False)
    op.create_index(op.f('ix_boil_product_id'), 'boil', ['product_id'], unique=False)
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doc_id', sa.String(length=50), nullable=True),
    sa.Column('doctype_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('plant', sa.String(length=1), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['doctype_id'], ['doctype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_author_id'), 'document', ['author_id'], unique=False)
    op.create_index(op.f('ix_document_doc_id'), 'document', ['doc_id'], unique=True)
    op.create_index(op.f('ix_document_doctype_id'), 'document', ['doctype_id'], unique=False)
    op.create_index(op.f('ix_document_plant'), 'document', ['plant'], unique=False)
    op.create_table('lot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('product_id', sa.String(length=6), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('manufacturer_id', sa.Integer(), nullable=True),
    sa.Column('manufacturer_lot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturer.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_lot_id'], ['manufacturer_lot.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lot_manufacturer_id'), 'lot', ['manufacturer_id'], unique=False)
    op.create_index(op.f('ix_lot_manufacturer_lot_id'), 'lot', ['manufacturer_lot_id'], unique=False)
    op.create_index(op.f('ix_lot_name'), 'lot', ['name'], unique=True)
    op.create_index(op.f('ix_lot_product_id'), 'lot', ['product_id'], unique=False)
    op.create_index(op.f('ix_lot_seller_id'), 'lot', ['seller_id'], unique=False)
    op.create_table('acceptance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.String(length=6), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('expire_date', sa.DateTime(), nullable=True),
    sa.Column('barrel_id', sa.Integer(), nullable=False),
    sa.Column('barrel_capacity', sa.Numeric(precision=9, scale=4), nullable=True),
    sa.Column('barrel_quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['barrel_id'], ['barrel.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['lot.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_acceptance_barrel_id'), 'acceptance', ['barrel_id'], unique=False)
    op.create_index(op.f('ix_acceptance_document_id'), 'acceptance', ['document_id'], unique=False)
    op.create_index(op.f('ix_acceptance_lot_id'), 'acceptance', ['lot_id'], unique=False)
    op.create_index(op.f('ix_acceptance_product_id'), 'acceptance', ['product_id'], unique=False)
    op.create_table('load',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['container.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_load_batch_id'), 'load', ['batch_id'], unique=False)
    op.create_index(op.f('ix_load_container_id'), 'load', ['container_id'], unique=False)
    op.create_index(op.f('ix_load_document_id'), 'load', ['document_id'], unique=False)
    op.create_table('weighting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.String(length=6), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=9, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['container.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['lot.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weighting_batch_id'), 'weighting', ['batch_id'], unique=False)
    op.create_index(op.f('ix_weighting_container_id'), 'weighting', ['container_id'], unique=False)
    op.create_index(op.f('ix_weighting_document_id'), 'weighting', ['document_id'], unique=False)
    op.create_index(op.f('ix_weighting_lot_id'), 'weighting', ['lot_id'], unique=False)
    op.create_index(op.f('ix_weighting_product_id'), 'weighting', ['product_id'], unique=False)
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weighting_product_id'), table_name='weighting')
    op.drop_index(op.f('ix_weighting_lot_id'), table_name='weighting')
    op.drop_index(op.f('ix_weighting_document_id'), table_name='weighting')
    op.drop_index(op.f('ix_weighting_container_id'), table_name='weighting')
    op.drop_index(op.f('ix_weighting_batch_id'), table_name='weighting')
    op.drop_table('weighting')
    op.drop_index(op.f('ix_load_document_id'), table_name='load')
    op.drop_index(op.f('ix_load_container_id'), table_name='load')
    op.drop_index(op.f('ix_load_batch_id'), table_name='load')
    op.drop_table('load')
    op.drop_index(op.f('ix_acceptance_product_id'), table_name='acceptance')
    op.drop_index(op.f('ix_acceptance_lot_id'), table_name='acceptance')
    op.drop_index(op.f('ix_acceptance_document_id'), table_name='acceptance')
    op.drop_index(op.f('ix_acceptance_barrel_id'), table_name='acceptance')
    op.drop_table('acceptance')
    op.drop_index(op.f('ix_lot_seller_id'), table_name='lot')
    op.drop_index(op.f('ix_lot_product_id'), table_name='lot')
    op.drop_index(op.f('ix_lot_name'), table_name='lot')
    op.drop_index(op.f('ix_lot_manufacturer_lot_id'), table_name='lot')
    op.drop_index(op.f('ix_lot_manufacturer_id'), table_name='lot')
    op.drop_table('lot')
    op.drop_index(op.f('ix_document_plant'), table_name='document')
    op.drop_index(op.f('ix_document_doctype_id'), table_name='document')
    op.drop_index(op.f('ix_document_doc_id'), table_name='document')
    op.drop_index(op.f('ix_document_author_id'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_boil_product_id'), table_name='boil')
    op.drop_index(op.f('ix_boil_batch_id'), table_name='boil')
    op.drop_table('boil')
    op.drop_index(op.f('ix_batch_product_product_id'), table_name='batch_product')
    op.drop_index(op.f('ix_batch_product_batch_id'), table_name='batch_product')
    op.drop_table('batch_product')
    op.drop_table('xml_dataP')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_seller_name'), table_name='seller')
    op.drop_table('seller')
    op.drop_index(op.f('ix_product_name'), table_name='product')
    op.drop_index(op.f('ix_product_marking'), table_name='product')
    op.drop_index(op.f('ix_product_barcode'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_manufacturer_lot_name'), table_name='manufacturer_lot')
    op.drop_table('manufacturer_lot')
    op.drop_index(op.f('ix_manufacturer_name'), table_name='manufacturer')
    op.drop_table('manufacturer')
    op.drop_index(op.f('ix_doctype_name'), table_name='doctype')
    op.drop_index(op.f('ix_doctype_alias'), table_name='doctype')
    op.drop_table('doctype')
    op.drop_index(op.f('ix_container_name'), table_name='container')
    op.drop_table('container')
    op.drop_index(op.f('ix_batch_plant'), table_name='batch')
    op.drop_index(op.f('ix_batch_name'), table_name='batch')
    op.drop_table('batch')
    op.drop_index(op.f('ix_barrel_name'), table_name='barrel')
    op.drop_table('barrel')
    op.drop_index(op.f('ix_author_name'), table_name='author')
    op.drop_index(op.f('ix_author_barcode'), table_name='author')
    op.drop_table('author')
    # ### end Alembic commands ###


def upgrade_data():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('XMLData', 'xml_data',
               existing_type=mssql.XML(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade_data():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('XMLData', 'xml_data',
               existing_type=mssql.XML(),
               nullable=False)
    # ### end Alembic commands ###

